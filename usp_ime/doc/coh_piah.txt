## INTRODUCAO ##

John eh monitor na materia de Introducao a Producao Textual I na Penn State University (PSU). Durante esse periodo, John
descobriu que uma epidemia de COH-PIAH estava se espalhando pela PSU. Essa doenca rara e altamente contagiosa faz com que 
as pessoas contaminadas produzam textos extremamente semelhantes de forma involuntaria. Apos a entrega da primeira redacao, 
John desconfiou que alguns alunos estavam sofrendo de COH-PIAH. John, se preocupando com a saude da turma, resolveu buscar 
um metodo para identificar os casos de COH-PIAH. Para isso, ele necessita da sua ajuda para desenvolver um programa que o 
auxilie a identificar os alunos contaminados.

## DETECCAO DE AUTORIA ##

Utilizando diferentes estatisticas do texto, eh possivel identificar aspectos que funcionam como uma "assinatura" do autor. 
Diferentes pessoas possuem diferentes estilos de escrita, algumas preferindo sentencas mais curtas, outras preferindo sentencas 
mais longas.

Essas "assinatura" pode ser utilizada para deteccao de plagio, evidencia forense, ou nesse caso, para detectar a grave doenca 
COH-PIAH.

## TRACOS LINGUISTICOS ##

Nesse exercicio utilizaremos as seguintes estatisticas para detectar a doenca:

- Tamanho medio de palavra: Media simples do numero de caracteres por palavra.

- Relacao Type-Token: Numero de palavras diferentes utilizadas em um texto divididas pelo total de palavras.

- Razao Hapax Legomana: Numero de palavras utilizadas uma vez dividido pelo numero total de palavras.

- Tamanho medio de sentenca: Media simples do numero de caracteres por sentenca.

- Complexidade de sentenca: Media simples do numero de frases por sentenca.

- Tamanho medio de frase: Media simples do numero de caracteres por frase.

## FUNCIONAMENTO DO PROGRAMA ##

Diversos estudos foram compilados e hoje se conhece precisamente a assinatura de um portador de COH-PIAH. Seu programa 
devera receber diversos textos e calcular os valores dos diferentes tracos linguisticos da seguinte forma:

- Tamanho medio de palavra eh a soma dos tamanhos das palavras dividida pelo numero total de palavras.

- Relacao Type-Token eh o numero de palavras diferentes dividido pelo numero total de palavras. Por exemplo, na frase 
"O gato cacava o rato", temos 5 palavras no total (o, gato, caçava, o, rato) mas somente 4 diferente (gato, caçav, rato). 
Nessa frase, a relacao Type-Token vale 4/5 = 0.8 

- Razao Hapax Legomana eh o numero de palavras que aparecem uma unica vez dividido pelo total de palavras. Por exemplo, 
na frase "O gato cacava o rato", temos 5 palavras no total (o, gato, caçava, o, rato) mas somente 3 que aparecem oh uma vez 
(gato, caçava, rato). Nessa frase, a relaao Hapax Legomana vale 3/5 = 0.6 

- Tamanho medio de sentenca eh a soma dos numeros de caracteres em todas as sentencas dividida pelo numero de sentencas 
(os caracteres que separam uma sentenca da outra nao devem ser contabilizados como parte da sentenca).

- Complexidade de sentenca eh o numero total de frases divido pelo numero de sentencas.

- Tamanho medio de frase eh a soma do numero de caracteres em cada frase dividida pelo numero de frases no texto (os caracteres 
que separam uma frase da outra nao devem ser contabilizados como parte da frase).

Apos calcular esses valores para cada texto, voce deve comparar com a assinatura fornecida para os infectados por COH-PIAH. O 
grau de similaridade entre dois textos, a a e b b, eh dado pela formula:

Sab - eh o grau de similaridade entre os textos a a e b b;
fi,a - eh o valor de cada traco linguistico i i no texto a a; e
fi,b - eh o valor de cada traco linguistico i i no texto b b.


##########################################

$ > python3 coh_piah.py

Bem-vindo ao detector automatico de COH-PIAH.

Entre o tamanho medio de palavra: 4.79
Entre a relacao Type-Token: 0.72
Entre a Razao Hapax Legomana: 0.56
Entre o tamanho medio de sentenca: 80.5
Entre a complexidade media da sentenca: 2.5
Entre o tamanho medio de frase: 31.6

Texto 1 
Navegadores antigos tinham uma frase gloriosa:"Navegar é preciso; viver não é preciso". Quero para mim o espírito [d]esta frase, transformada a forma para a casar como eu sou: Viver não é necessário; o que é necessário é criar. Não conto gozar a minha vida; nem em gozá-la penso. Só quero torná-la grande, ainda que para isso tenha de ser o meu corpo e a (minha alma) a lenha desse fogo. Só quero torná-la de toda a humanidade ainda que para isso tenha de a perder como minha. Cada vez mais assim penso.Cada vez mais ponho da essência anímica do meu sangue o propósito impessoal de engrandecer a pátria e contribuir para a evolução da humanidad Eh a forma que em mim tomou o misticismo da nossa Raça

Texto 2
Voltei-me para ela; Capitu tinha os olhos no chão. Ergueu-os logo, devagar, e ficamos a olhar um para o outro... Confissão de crianças, tu valias bem duas ou três páginas, mas quero ser poupado. Em verdade, não falamos nada; o muro falou por nós. Não nos movemos, as mãos é que se estenderam pouco a pouco, todas quatro, pegando-se, apertando-se, fundindo-se. Não marquei a hora exata daquele gesto. Devia tê-la marcado; sinto a falta de uma nota escrita naquela mesma noite, e que eu poria aqui com os erros de ortografia que trouxesse, mas não traria nenhum, tal era a diferença entre o estudante e o adolescente. Conhecia as regras do escrever, sem suspeitar as do amar; tinha orgias de latim e era virgem de mulheres. 

Texto 3
NOSSA alegria diante dum sistema metafísico, nossa satisfação em presença duma construção do pensamento, em que a organização espiritual do mundo se mostra num conjunto lógico, coerente a harmônico, sempre dependem eminentemente da estética; têm a mesma origem que o prazer, que a alta satisfação, sempre serena afinal, que a atividade artística nos proporciona quando cria a ordem e a forma a nos permite abranger com a vista o caos da vida, dando-lhe transparência.

O autor do texto 2 está infectado com COH-PIAH

## FUNCOES DE SUPORTE ##

As seguintes funcoes devem ser utilizadas no seu programa, algumas ja estao implementadas, outras devem ser implementadas 
por voce. Sinta-se livre para criar funcoes adicionais, caso necessario. Utilize este esqueleto como base para comecar o seu 
programa.

Dica: aproveite as funcoes pre-prontas do esqueleto, como "separa_sentenca", "separa_frase" etc.! Como ha mais de uma maneira 
de pensar a separacao entre frases/palavras/sentencas, usando essas funcoes voce vai fazer o calculo da maneira esperada pelo 
corretor automatico.

Cuidado: A funcao le_textos() considera que um "texto" eh uma linha de texto, ou seja, nao eh possivel inserir paragrafos separados. 
Se voce digitar algum "enter", a funcao vai entender que voce esta comecando um novo texto. Preste especial atencao a isso se usar 
"copiar/colar" para inserir os textos! Note tambem que, no calculo de similaridade, eh preciso encontrar o valor absoluto de cada 
uma das diferenças.


## COH_PIAH.PY ##

import re

def le_assinatura():
    '''A funcao le os valores dos tracos linguisticos do modelo e devolve uma 
    assinatura a ser comparada com os textos fornecidos'''
    
    print("Bem-vindo ao detector automático de COH-PIAH.")

    wal = float(input("Entre o tamanho medio de palavra:"))
    ttr = float(input("Entre a relação Type-Token:"))
    hlr = float(input("Entre a Razão Hapax Legomana:"))
    sal = float(input("Entre o tamanho médio de sentença:"))
    sac = float(input("Entre a complexidade média da sentença:"))
    pal = float(input("Entre o tamanho medio de frase:"))

    return [wal, ttr, hlr, sal, sac, pal]

def le_textos():
    i = 1
    textos = []
    texto = input("Digite o texto " + str(i) +" (aperte enter para sair):")
    while texto:
        textos.append(texto)
        i += 1
        texto = input("Digite o texto " + str(i) +" (aperte enter para sair):")

    return textos

def separa_sentencas(texto):
    '''A funcao recebe um texto e devolve uma lista das sentencas dentro do texto'''
    sentencas = re.split(r'[.!?]+', texto)
    if sentencas[-1] == '':
        del sentencas[-1]
    return sentencas

def separa_frases(sentenca):
    '''A funcao recebe uma sentenca e devolve uma lista das frases dentro da sentenca'''
    return re.split(r'[,:;]+', sentenca)

def separa_palavras(frase):
    '''A funcao recebe uma frase e devolve uma lista das palavras dentro da frase'''
    return frase.split()

def n_palavras_unicas(lista_palavras):
    '''Essa funcao recebe uma lista de palavras e devolve o numero de palavras que aparecem uma unica vez'''
    freq = dict()
    unicas = 0
    for palavra in lista_palavras:
        p = palavra.lower()
        if p in freq:
            if freq[p] == 1:
                unicas -= 1
            freq[p] += 1
        else:
            freq[p] = 1
            unicas += 1

    return unicas

def n_palavras_diferentes(lista_palavras):
    '''Essa funcao recebe uma lista de palavras e devolve o numero de palavras diferentes utilizadas'''
    freq = dict()
    for palavra in lista_palavras:
        p = palavra.lower()
        if p in freq:
            freq[p] += 1
        else:
            freq[p] = 1

    return len(freq)

def compara_assinatura(as_a, as_b):
    '''IMPLEMENTAR. Essa funcao recebe duas assinaturas de texto e deve devolver o grau de similaridade nas assinaturas.'''
    pass

def calcula_assinatura(texto):
    '''IMPLEMENTAR. Essa funcao recebe um texto e deve devolver a assinatura do texto.'''
    pass

def avalia_textos(textos, ass_cp):
    '''IMPLEMENTAR. Essa funcao recebe uma lista de textos e deve devolver o numero (1 a n) do texto com maior probabilidade de ter sido infectado por COH-PIAH.'''
    pass

## EXEMPLO DE ASSINATURA ##

Um passo importante para seu programa eh calcular a assinatura dos textos corretamente. Para testar se sua funcao calcula_assinatu
esta correta, deixamos qui um exemplo de execucao

texto = "Muito além, nos confins inexplorados da região mais brega da Borda Ocidental desta Galáxia, há um pequeno sol amarelo e esquecido. Girando em torno deste sol, a uma distancia de cerca de 148 milhões de quilômetros, há um planetinha verde-azulado absolutamente insignificante, cujas formas de vida, descendentes de primatas, são tão extraordinariamente primitivas que ainda acham que relógios digitais são uma grande ideia."

calcula_assinatura(texto)

>[5.571428571428571, 0.8253968253968254, 0.6984126984126984, 210.0, 4.5, 45.888888888888886]
